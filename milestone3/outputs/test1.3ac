System.out.println:
	push stackbase
	stackbase = stacktop
	s := popparam
	print s
	pop stackbase
	return
	EndFunction
GFG.Fibonacci:
	push stackbase
	stackbase = stacktop
	N := popparam
	this := popparam
	num1 = -0(stackbase)
	num2 = -4(stackbase)
	num1 := 0
	num2 := 1
	counter = -8(stackbase)
	counter := 0
L0:
	t0:= counter < N
	ifFalse t0 goto L1
	t1:= num1 concatenate " "
	param t1
	call System.out.println
	num3 = -12(stackbase)
	t2:= num2 +int num1
	num3 := t2
	num1 := num2
	num2 := num3
	t3:= counter +int 1
	counter := t3
	goto L0
L1:
	pop stackbase
	EndFunction
GFG.main:
	push stackbase
	stackbase = stacktop
	args := popparam
	this := popparam
	N = -0(stackbase)
	N := 10
	param N
	param this
	call GFG.Fibonacci
	pop stackbase
	EndFunction
	EndProgram